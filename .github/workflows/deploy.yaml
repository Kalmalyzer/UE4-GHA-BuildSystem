on:
  push:
    branches:
      - '**'

env:
  TF_IN_AUTOMATION: 1
  TF_INPUT: 0
  TF_CLI_ARGS_apply: "-auto-approve"
  GOOGLE_CREDENTIALS: ${{ secrets.GCP_SERVICE_ACCOUNT_CREDENTIALS }}
  TERRAFORM_VERSION: "0.12.28"

jobs:
  avoid_concurrent_invocations:
    timeout-minutes: 120
    runs-on: ubuntu-latest
    steps:
      - name: Turnstyle
        uses: softprops/turnstyle@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy_project:
    needs: [ avoid_concurrent_invocations ]
    name: "Deploy project"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: "Deploy project"
        run: cd configurations/${{ github.repository }}/project && terraform init -backend-config=../backend.hcl && terraform plan && terraform apply

  deploy_engine_storage:
    needs: [ deploy_project ]
    name: "Deploy engine storage"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: "Deploy engine storage"
        run: cd configurations/${{ github.repository }}/engine-storage && terraform init -backend-config=../backend.hcl && terraform plan && terraform apply

  deploy_game_storage:
    needs: [ deploy_project ]
    name: "Deploy game storage"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: "Deploy game storage"
        run: cd configurations/${{ github.repository }}/game-storage && terraform init -backend-config=../backend.hcl && terraform plan && terraform apply

  build_buildagent_image:
    needs: [ deploy_project ]
    name: "Build BuildAgent VM image"
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.build_image.outputs.image_name }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: "Setup gcloud"
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_CREDENTIALS }}
          export_default_credentials: true

      - name: "Build image"
        id: build_image
        run: |

          TEMPLATE_FILE=${{ github.workspace }}/submodules/UE4-GHA-BuildAgent/UE4-GCE-Win64-Git-GitHubActions-MSVC.json
          VARIABLE_FILE=${{ github.workspace }}/configurations/${{ github.repository }}/build-agent-image/vars.json

          TEMPLATE_FOLDER=`dirname "${TEMPLATE_FILE}"`
          IMAGE_NAME=build-agent-`cd "${TEMPLATE_FOLDER}" && git rev-parse --short HEAD`

          submodules/UE4-BuildServices/scripts/build-packer-image.sh ${TEMPLATE_FILE} ${VARIABLE_FILE} ${IMAGE_NAME}
          
          echo  "::set-output name=image_name::${IMAGE_NAME}"

  deploy_engine_builders:
    needs: [ deploy_engine_storage, build_buildagent_image ]
    name: "Deploy engine builders"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: "Deploy engine builders"
        run: |
          export TF_VAR_github_pat=${{ secrets.ENGINE_GITHUB_PAT }}
          export TF_VAR_image=${{ needs.build_buildagent_image.outputs.image }}
          cd configurations/${{ github.repository }}/engine-builders && terraform init -backend-config=../backend.hcl && terraform plan && terraform apply

  deploy_game_builders:
    needs: [ deploy_game_storage, build_buildagent_image ]
    name: "Deploy game builders"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: "Deploy game builders"
        run: |
          export TF_VAR_github_pat=${{ secrets.GAME_GITHUB_PAT }}
          export TF_VAR_image=${{ needs.build_buildagent_image.outputs.image }}
          cd configurations/${{ github.repository }}/game-builders && terraform init -backend-config=../backend.hcl && terraform plan && terraform apply

  deploy_engine_watchdog:
    needs: [ deploy_project ]
    name: "Deploy engine watchdog"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: "Deploy engine watchdog"
        run: |
          export TF_VAR_github_pat=${{ secrets.ENGINE_GITHUB_PAT }}
          cd configurations/${{ github.repository }}/engine-watchdog && terraform init -backend-config=../backend.hcl && terraform plan && terraform apply

  deploy_game_watchdog:
    needs: [ deploy_project ]
    name: "Deploy game watchdog"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: "Deploy game watchdog"
        run: |
          export TF_VAR_github_pat=${{ secrets.GAME_GITHUB_PAT }}
          cd configurations/${{ github.repository }}/game-watchdog && terraform init -backend-config=../backend.hcl && terraform plan && terraform apply
